# remap C-b to C-a
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# reload the conf file on the fly
bind r source-file ~/.tmux.conf \; display 'Reloaded success!'

# who knows what this does, but I can now scoll in a tmux pane
set -g terminal-overrides 'xterm*:smcup@:rmcup@'
# Vim mouse for browse output
set -g mouse on 
# Vim key mode for browse output
set -gw mode-keys vi


# Colorscheme for vim
set -g default-terminal "screen-256color"

# Vim key mode for browse output
set -gw mode-keys vi

# repeat last shell command on right pane (if it happens to be a shell)
# send the up arrow and enter to that pane (run last shell command)
# switch to last pane, which will be window 0, pane 0 (primary left)
# make sure we are horiontal-even
# redraw vim -- since it gets fucked up in this build when selecting
#	layout programatically. This whole thing assumes vim in the left pane.
bind-key m select-pane -L \; send-keys Up C-m \; last-pane

# Swap right pane in window 0 with default pane in window 1
# 
# make sure our current window is listed as 0
# create a second window if it doesn't exist
# select our second pane in 0 window
# join that pane to window 1
# select the pane above the one we just moved there
# move that pane to window 0

bind-key s \
	if-shell 'tmux select-windo -t :0' '' 'move-window -t :0' \; \
	if-shell 'test $(tmux list-panes | wc -l) -gt 1' '' 'split-window -h' \; \
	if-shell 'tmux select-window -t :1' '' 'new-window' \; \
	select-window -t 0 \; \
	select-pane -t 1 \; \
	join-pane -t 1.0 \; \
	select-pane -U \; \
	join-pane -h -t 0.0 \; \
	last-pane

# Thanks Video from https://www.bilibili.com/video/av8079953
